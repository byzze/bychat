syntax = "proto3";

option  go_package = "../protobuf";
option java_multiple_files = true;
option java_package = "io.grpc.examples.protobuf";
option java_outer_classname = "ProtobufProto";

package protobuf;

// The AccServer service definition.
service AccServer {
    // 发送消息
    rpc SendMsg (SendMsgReq) returns (SendMsgRsp) {}
    // 给这台机器的房间内所有用户发送消息
    rpc SendMsgAll (SendMsgAllReq) returns (SendMsgAllRsp) {}
    // 获取用户列表
    rpc GetRoomUserList (GetRoomUserListReq) returns (GetRoomUserListRsp) {}
}

// 发送消息
message SendMsgReq {
    string seq = 1; // 序列号
    uint32 appID = 2; // appID
    uint32 roomID = 3; // 房间Id
    uint32 userID = 4; // 用户ID
    string cms = 5; // cms 动作: msg/enter/exit
    string type = 6; // type 消息类型，默认是 text
    string msg = 7; // msg
    bool isLocal = 8; // 是否查询本机 acc内部调用为:true(本机查询不到即结束)
}

message SendMsgRsp {
    uint32 retCode = 1;
    string errMsg = 2;
    string sendMsgID = 3;
}

// 给这台机器的房间内所有用户发送消息
message SendMsgAllReq {
    string seq = 1; // 序列号
    uint32 appID = 2; // appID
    uint32 roomID = 3; // 房间Id
    uint32 userID = 4; // 不发送的用户ID
    string cms = 5; // cms 动作: msg/enter/exit
    string type = 6; // type 消息类型，默认是 text
    string msg = 7; // msg
}

message SendMsgAllRsp {
    uint32 retCode = 1;
    string errMsg = 2;
    string sendMsgID = 3;
}

// 获取用户列表
message GetRoomUserListReq {
    uint32 appID = 1;
    uint32 roomID = 2;
}

message GetRoomUserListRsp {
    uint32 retCode = 1;
    string errMsg = 2;
    repeated string userID = 3;
}